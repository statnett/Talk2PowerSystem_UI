# This is a configuration snippet added into specific directory containing configuration includes.
# There includes will be added to the default web application '.conf' file.

# The configuration snipped defines proxy routes for the backend service, which will intercept the web application
# requests and reroute them to the correct backend service address.
# Additionally, it fixes the routing to GraphDB, because it is invoked with the context path of the web application,
# which should be stripped.

{{- $backend := required "The backend URL is required!" .Values.configuration.backend.url -}}
{{- $backendUrl := urlParse $backend -}}
{{- $chatContextPath := trimSuffix "/" .Values.configuration.contextPath -}}
{{- $backendLocPath := printf "%s/rest/" $chatContextPath -}}
{{- $graphdbUrlStr := trimSuffix "/" .Values.configuration.graphdb.url -}}
{{- $graphdbUrl := urlParse $graphdbUrlStr -}}
{{- $graphdbLocPath := printf "%s%s/" $chatContextPath $graphdbUrl.path -}}

# Proxies the request for the Chatbot service to the correct address.
# Note: if the backend service isn't available the Nginx service won't start, because it will try to check if the proxy
# domain is accessible.
location {{ printf "%s" $backendLocPath }} {
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_pass {{ printf "%s%s" $backend $backendLocPath }};
}

# Strips the '/chat' context path when redirecting to GraphDB
location ^~ {{ printf "%s" $graphdbLocPath }} {
  rewrite ^{{ printf "%s" $graphdbLocPath }}(.*)$ {{ printf "%s/$1" $graphdbUrlStr }} permanent;
}
